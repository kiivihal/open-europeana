<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2007 EDL FOUNDATION
  ~
  ~  Licensed under the EUPL, Version 1.1 orÂ– as soon they
  ~  will be approved by the European Commission - subsequent
  ~  versions of the EUPL (the "Licence");
  ~  you may not use this work except in compliance with the
  ~  Licence.
  ~  You may obtain a copy of the Licence at:
  ~
  ~  http://ec.europa.eu/idabc/eupl
  ~
  ~  Unless required by applicable law or agreed to in
  ~  writing, software distributed under the Licence is
  ~  distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
  ~  express or implied.
  ~  See the Licence for the specific language governing
  ~  permissions and limitations under the Licence.
  -->

<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:security="http://www.springframework.org/schema/security"
        xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.xsd
        ">

    <context:annotation-config/>

    <tx:annotation-driven proxy-target-class="true"/>

    <!--todo: is this bean necessary?-->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="europeanaProperties" class="eu.europeana.core.querymodel.query.EuropeanaProperties"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="europeanaProperties"/>
    </bean>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="#{europeanaProperties['db.driverClass']}"/>
        <property name="jdbcUrl" value="#{europeanaProperties['db.jdbcUrl']}"/>
        <property name="user" value="#{europeanaProperties['db.user']}"/>
        <property name="password" value="#{europeanaProperties['db.password']}"/>
    </bean>

    <!--todo: these declarations are related to using annotation-based validation-->
    <!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>-->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
        <!--<property name="webBindingInitializer">-->
            <!--<bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">-->
                <!--<property name="validator" ref="validator"/>-->
            <!--</bean>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath:/db/persistence.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="true"/>
                <!--<property name="database" value="HSQL"/>-->
            </bean>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean name="staticPageCache" class="eu.europeana.core.util.web.StaticPageCache"/>

    <bean name="userDao" class="eu.europeana.core.database.dao.UserDaoImpl"/>

    <bean name="staticInfoDao" class="eu.europeana.core.database.dao.StaticInfoDaoImpl"/>

    <bean name="dashboardDao" class="eu.europeana.core.database.dao.DashboardDaoImpl"/>

    <bean name="tokenRepositoryService" class="eu.europeana.core.util.web.TokenRepositoryService"/>

    <bean name="tokenDao" class="eu.europeana.core.database.dao.TokenDaoImpl"/>

    <bean name="tokenService" class="eu.europeana.core.util.web.TokenService"/>

    <bean id="solrServer" class="org.apache.solr.client.solrj.impl.CommonsHttpSolrServer">
        <constructor-arg value="#{europeanaProperties['solr.baseUrl']}"/>
        <property name="soTimeout" value="#{europeanaProperties['solr.timeout']}"/>
        <property name="connectionTimeout" value="#{europeanaProperties['solr.timeout']}"/>
        <property name="defaultMaxConnectionsPerHost" value="64"/>
        <property name="maxTotalConnections" value="125"/>
        <property name="followRedirects" value="false"/>
        <property name="maxRetries" value="#{europeanaProperties['solr.retries']}"/>
    </bean>

    <bean id="annotationProcessor" class="eu.europeana.core.querymodel.annotation.AnnotationProcessorImpl">
        <property name="classes">
            <util:list>
                <value type="java.lang.Class">eu.europeana.core.querymodel.beans.IdBean</value>
                <value type="java.lang.Class">eu.europeana.core.querymodel.beans.BriefBean</value>
                <value type="java.lang.Class">eu.europeana.core.querymodel.beans.FullBean</value>
                <value type="java.lang.Class">eu.europeana.core.querymodel.beans.AllFieldBean</value>
            </util:list>
        </property>
    </bean>

    <bean id="normalizedImportRepository" class="eu.europeana.core.database.incoming.ImportRepositoryImpl">
        <property name="dataDirectory" value="#{europeanaProperties['dashboard.normalized.import.repository']}"/>
    </bean>

    <bean id="normalizedEseImporter" class="eu.europeana.core.database.incoming.ESEImporterImpl">
        <property name="importRepository" ref="normalizedImportRepository"/>
        <property name="normalized" value="true"/>
        <property name="chunkSize" value="#{europeanaProperties['solr.chunkSize']}"/>
        <property name="beanClass">
            <value type="java.lang.Class">eu.europeana.core.querymodel.beans.AllFieldBean</value>
        </property>
    </bean>

    <bean id="queryAnalyser" class="eu.europeana.core.querymodel.annotation.QueryAnalyzer">
        <property name="annotationProcessor" ref="annotationProcessor"/>
    </bean>

    <bean id="beanQueryModelFactory" class="eu.europeana.core.BeanQueryModelFactory">
        <property name="briefBean">
                <value type="java.lang.Class">eu.europeana.core.querymodel.beans.BriefBean</value>
        </property>
        <property name="fullBean">
                <value type="java.lang.Class">eu.europeana.core.querymodel.beans.FullBean</value>
        </property>
        <property name="idBean">
                <value type="java.lang.Class">eu.europeana.core.querymodel.beans.IdBean</value>
        </property>
    </bean>

    <bean id="objectCache" class="eu.europeana.core.database.incoming.cache.ObjectCacheImpl">
        <property name="root" value="#{europeanaProperties['cache.cacheRoot']}"/>
    </bean>

    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="WEB-INF/templates/"/>
    </bean>

    <bean id="clickStreamLogger" class="eu.europeana.core.util.web.ClickStreamLoggerImpl"/>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="#{europeanaProperties['smtp.host']}"/>
        <property name="username" value="#{europeanaProperties['smtp.username']}"/>
        <property name="password" value="#{europeanaProperties['smtp.password']}"/>
    </bean>

    <bean id="daoUserDetailsService" class="eu.europeana.core.util.web.UserDaoDetailsService">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="proposedSearchTermSampler" class="eu.europeana.core.util.web.ProposedSearchTermSampler">
        <property name="displayCount" value="3"/>
    </bean>

    <bean id="carouselItemSampler" class="eu.europeana.core.util.web.CarouselItemSampler">
        <property name="displayCount" value="40"/>
    </bean>

    <bean id="emailSenderForExceptions" class="eu.europeana.core.util.web.EmailSender">
        <property name="template" value="/email/exception"/>
    </bean>

    <bean id="emailSenderForRegisterNotify" class="eu.europeana.core.util.web.EmailSender">
        <property name="template" value="/email/register-notify"/>
    </bean>

    <bean id="emailSenderForPasswordChangeNotify" class="eu.europeana.core.util.web.EmailSender">
        <property name="template" value="/email/password-change-notify"/>
    </bean>

    <bean id="emailSenderForSendToFriend" class="eu.europeana.core.util.web.EmailSender">
        <property name="template" value="/email/to-friend"/>
    </bean>

    <bean id="emailSenderForUserFeedback" class="eu.europeana.core.util.web.EmailSender">
        <property name="template" value="/email/feedback"/>
    </bean>

    <bean id="emailSenderForUserFeedbackConfirmation" class="eu.europeana.core.util.web.EmailSender">
        <property name="template" value="/email/feedback-confirmation"/>
    </bean>

    <bean id="proposedSearchTermRefreshTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail">
            <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                <property name="targetObject" ref="proposedSearchTermSampler"/>
                <property name="targetMethod" value="refresh"/>
                <property name="concurrent" value="false"/>
            </bean>
        </property>
        <property name="startDelay" value="0"/>
        <property name="repeatInterval" value="10000"/>
    </bean>

    <bean id="carouselItemRefreshTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail">
            <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                <property name="targetObject" ref="carouselItemSampler"/>
                <property name="targetMethod" value="refresh"/>
                <property name="concurrent" value="false"/>
            </bean>
        </property>
        <property name="startDelay" value="0"/>
        <property name="repeatInterval" value="11000"/>
    </bean>

    <bean id="staticPageCacheTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail">
            <bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
                <property name="targetObject" ref="staticPageCache"/>
                <property name="targetMethod" value="invalidate"/>
                <property name="concurrent" value="false"/>
            </bean>
        </property>
        <property name="startDelay" value="600000"/>
        <property name="repeatInterval" value="600000"/>
    </bean>

    <bean id="registrationEmailSender" class="eu.europeana.core.util.web.TokenReplyEmailSender">
        <property name="emailSenders">
            <map>
                <entry key="register">
                    <bean class="eu.europeana.core.util.web.EmailSender">
                        <property name="template" value="/email/confirmation"/>
                    </bean>
                </entry>
                <entry key="forgotPassword">
                    <bean class="eu.europeana.core.util.web.EmailSender">
                        <property name="template" value="/email/forgot-password"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="exceptionResolver" class="eu.europeana.core.util.web.ExceptionResolver"/>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="daoUserDetailsService">
            <security:password-encoder hash="sha"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:http auto-config="true" create-session="never">
        <security:intercept-url pattern="/secure/*.html" access="ROLE_USER"/>
        <security:intercept-url pattern="/myeuropeana.html" access="ROLE_USER"/>
        <security:intercept-url pattern="/*.ajax" access="ROLE_USER"/>
        <security:form-login login-page="/login.html" authentication-failure-url="/login.html?error=1"/>
        <security:logout logout-url="/logout.html" logout-success-url="/logout-success.html"/>
        <security:remember-me token-repository-ref="tokenRepositoryService" />
    </security:http>

</beans>

